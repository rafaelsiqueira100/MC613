|ripple_carry_board
SW[0] => ripple_carry:adder.y[0]
SW[0] => bin2hex:hex2creator.bin[0]
SW[1] => ripple_carry:adder.y[1]
SW[1] => bin2hex:hex2creator.bin[1]
SW[2] => ripple_carry:adder.y[2]
SW[2] => bin2hex:hex2creator.bin[2]
SW[3] => ripple_carry:adder.y[3]
SW[3] => bin2hex:hex2creator.bin[3]
SW[4] => ripple_carry:adder.x[0]
SW[4] => bin2hex:hex4creator.bin[0]
SW[5] => ripple_carry:adder.x[1]
SW[5] => bin2hex:hex4creator.bin[1]
SW[6] => ripple_carry:adder.x[2]
SW[6] => bin2hex:hex4creator.bin[2]
SW[7] => ripple_carry:adder.x[3]
SW[7] => bin2hex:hex4creator.bin[3]
HEX4[0] << bin2hex:hex4creator.hex[0]
HEX4[1] << bin2hex:hex4creator.hex[1]
HEX4[2] << bin2hex:hex4creator.hex[2]
HEX4[3] << bin2hex:hex4creator.hex[3]
HEX4[4] << bin2hex:hex4creator.hex[4]
HEX4[5] << bin2hex:hex4creator.hex[5]
HEX4[6] << bin2hex:hex4creator.hex[6]
HEX2[0] << bin2hex:hex2creator.hex[0]
HEX2[1] << bin2hex:hex2creator.hex[1]
HEX2[2] << bin2hex:hex2creator.hex[2]
HEX2[3] << bin2hex:hex2creator.hex[3]
HEX2[4] << bin2hex:hex2creator.hex[4]
HEX2[5] << bin2hex:hex2creator.hex[5]
HEX2[6] << bin2hex:hex2creator.hex[6]
HEX0[0] << bin2hex:hex0creator.hex[0]
HEX0[1] << bin2hex:hex0creator.hex[1]
HEX0[2] << bin2hex:hex0creator.hex[2]
HEX0[3] << bin2hex:hex0creator.hex[3]
HEX0[4] << bin2hex:hex0creator.hex[4]
HEX0[5] << bin2hex:hex0creator.hex[5]
HEX0[6] << bin2hex:hex0creator.hex[6]
LEDR[0] << ripple_carry:adder.overflow


|ripple_carry_board|ripple_carry:adder
x[0] => full_adder:RippleCarryAdder:0:adder.x
x[1] => full_adder:RippleCarryAdder:1:adder.x
x[2] => full_adder:RippleCarryAdder:2:adder.x
x[3] => full_adder:RippleCarryAdder:3:adder.x
y[0] => full_adder:RippleCarryAdder:0:adder.y
y[1] => full_adder:RippleCarryAdder:1:adder.y
y[2] => full_adder:RippleCarryAdder:2:adder.y
y[3] => full_adder:RippleCarryAdder:3:adder.y
r[0] <= full_adder:RippleCarryAdder:0:adder.r
r[1] <= full_adder:RippleCarryAdder:1:adder.r
r[2] <= full_adder:RippleCarryAdder:2:adder.r
r[3] <= full_adder:RippleCarryAdder:3:adder.r
cin => full_adder:RippleCarryAdder:0:adder.cin
cout <= full_adder:RippleCarryAdder:3:adder.cout
overflow <= overflow.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|ripple_carry:adder|full_adder:\RippleCarryAdder:0:adder
x => r.IN0
x => cout.IN0
x => cout.IN0
y => r.IN1
y => cout.IN1
y => cout.IN0
r <= r.DB_MAX_OUTPUT_PORT_TYPE
cin => r.IN1
cin => cout.IN1
cin => cout.IN1
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|ripple_carry:adder|full_adder:\RippleCarryAdder:1:adder
x => r.IN0
x => cout.IN0
x => cout.IN0
y => r.IN1
y => cout.IN1
y => cout.IN0
r <= r.DB_MAX_OUTPUT_PORT_TYPE
cin => r.IN1
cin => cout.IN1
cin => cout.IN1
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|ripple_carry:adder|full_adder:\RippleCarryAdder:2:adder
x => r.IN0
x => cout.IN0
x => cout.IN0
y => r.IN1
y => cout.IN1
y => cout.IN0
r <= r.DB_MAX_OUTPUT_PORT_TYPE
cin => r.IN1
cin => cout.IN1
cin => cout.IN1
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|ripple_carry:adder|full_adder:\RippleCarryAdder:3:adder
x => r.IN0
x => cout.IN0
x => cout.IN0
y => r.IN1
y => cout.IN1
y => cout.IN0
r <= r.DB_MAX_OUTPUT_PORT_TYPE
cin => r.IN1
cin => cout.IN1
cin => cout.IN1
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|bin2hex:hex4creator
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN0
bin[0] => hex.IN0
bin[0] => hex.IN0
bin[0] => hex.IN1
bin[0] => hex.IN0
bin[0] => hex.IN0
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN0
bin[0] => hex.IN0
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN0
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[2] => hex.IN1
bin[2] => hex.IN0
bin[2] => hex.IN1
bin[2] => hex.IN0
bin[2] => hex.IN1
bin[2] => hex.IN0
bin[2] => hex.IN0
bin[2] => hex.IN1
bin[2] => hex.IN1
bin[2] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|bin2hex:hex2creator
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN0
bin[0] => hex.IN0
bin[0] => hex.IN0
bin[0] => hex.IN1
bin[0] => hex.IN0
bin[0] => hex.IN0
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN0
bin[0] => hex.IN0
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN0
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[2] => hex.IN1
bin[2] => hex.IN0
bin[2] => hex.IN1
bin[2] => hex.IN0
bin[2] => hex.IN1
bin[2] => hex.IN0
bin[2] => hex.IN0
bin[2] => hex.IN1
bin[2] => hex.IN1
bin[2] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|bin2hex:hex0creator
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN0
bin[0] => hex.IN0
bin[0] => hex.IN0
bin[0] => hex.IN1
bin[0] => hex.IN0
bin[0] => hex.IN0
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN0
bin[0] => hex.IN0
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN0
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[0] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN0
bin[1] => hex.IN1
bin[1] => hex.IN1
bin[2] => hex.IN1
bin[2] => hex.IN0
bin[2] => hex.IN1
bin[2] => hex.IN0
bin[2] => hex.IN1
bin[2] => hex.IN0
bin[2] => hex.IN0
bin[2] => hex.IN1
bin[2] => hex.IN1
bin[2] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
bin[3] => hex.IN1
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE


